use music_database;
create database music_database;

CREATE TABLE artist (
    artist_id int NOT NULL primary key,
    name varchar(120)
);
SELECT* FROM artist;

create table album (
    album_id int NOT NULL primary key,
    title varchar (120),
    artist_id int,
    foreign key (artist_id) references artist (artist_id)
    );
    select*from album;
    
CREATE TABLE customer (
    customer_id integer NOT NULL primary key,
    first_name char(50),
    last_name char(50),
    company char(120),
    address char(120),
    city char(50),
    state char(50),
    country char(50),
    postal_code char(50),
    phone char(50),
    fax char(50),
    email char(50),
    support_rep_id integer
);
SELECT*FROM CUSTOMER;

 CREATE TABLE employees (
    employee_id int NOT NULL primary key,
    last_name char(50),
    first_name char(50),
    title char(50),
    reports_to char(30),
    levels char(10),
    birthdate DATE,
    hire_date DATE,
    address char(120),
    city char(50),
    state char(50),
    country char(30),
    postal_code char(30),
    phone char(30),
    fax char(30),
    email char(30)
);
SELECT*FROM employees;
CREATE TABLE genre (
    genre_id char(50) NOT NULL primary key,
    name char(120)
);
select*from genre;
CREATE TABLE invoice (
    invoice_id integer NOT NULL primary key,
    customer_id integer,
    invoice_date DATE,
    billing_address char(120),
    billing_city char(30),
    billing_state char(30),
    billing_country char(30),
    billing_postal char(30),
    total int,
	foreign key (customer_id) references customer (customer_id)
);
select*from invoice;

CREATE TABLE media_type (
    media_type_id char(50) NOT NULL primary key,
    name char(120)
);
select*from media_type;

CREATE TABLE track (
    track_id integer NOT NULL primary key,
    name char(150),
    album_id int,
    media_type_id char(50),
    genre_id char(50),
    composer char(190),
    milliseconds integer,
    bytes integer,
    unit_price int,
    foreign key (album_id) references album (album_id),
    foreign key (genre_id) references genre (genre_id),
	foreign key (media_type_id) references media_type (media_type_id)
);
select *from track;
CREATE TABLE invoice_line (
    invoice_line_id char(50) NOT NULL primary key,
    invoice_id integer,
    track_id integer,
    unit_price int,
    quantity int,
    foreign key (invoice_id) references invoice (invoice_id),
	foreign key (track_id) references track (track_id)
);
select*from invoice_line;

 CREATE TABLE playlist (
    playlist_id char(50) NOT NULL primary key,
    name char(120)
);
select *from playlist;
CREATE TABLE playlist_track (
    playlist_id char(50) not null,
    track_id integer,
    foreign key (track_id) references track (track_id)
);
select *from playlist_track;

load data local infile 
"C:/Users/Admin/Downloads/music store data/music store data/playlist_track.csv"
into table playlist_track
fields terminated by','
enclosed by '"'
lines terminated by '\n'
ignore 1 rows;
